{"version":3,"sources":["components/App/styled.js","components/TableContainer/constants.js","components/TableContainer/Row/styled.js","components/TableContainer/tableSlice.js","components/TableContainer/sortSlice.js","components/features/useData.js","components/TableContainer/Row/Row.js","components/TableContainer/TableColumns/styled.js","components/TableContainer/TableColumns/TableColumns.js","components/TableContainer/TableStructure/styled.js","components/TableContainer/TableStructure/TableStructure.js","components/TableContainer/styled.js","components/TableContainer/SearchPanel/styled.js","components/TableContainer/SearchPanel/SearchPanel.js","components/features/useSearchData.js","components/TableContainer/AdditionPanel/styled.js","components/TableContainer/AdditionPanel/AdditionPanel.js","components/TableContainer/TableContainer.js","components/App/App.js","store/store.js","index.js"],"names":["useStyles","makeStyles","app","display","flexDirection","columnLabels","position","borderLeft","columns","label","dataKey","root","color","cursor","cell","height","minWidth","wordBreak","button","textTransform","background","tableSlice","createSlice","name","initialState","dataFetching","loading","error","reducers","changingDataSuccess","state","action","payload","changingDataFailure","changingDataFetch","addData","deleteData","filter","el","id","actions","reducer","sortSlice","sortData","useData","dispatch","useDispatch","tableData","useSelector","regularData","loadingData","errorData","sortedData","addNewElement","useCallback","value","deleteElement","changingElementsSuccess","changingElementsFailure","changingElementsFetch","sortingElements","Row","memo","index","style","data","classes","TableRow","component","className","map","ind","TableCell","variant","Button","onClick","areEqual","width","fontWeight","TableColumns","onSortClick","useState","isSorted","setIsSorted","column","colIndex","scope","useTableStyles","flex","table","tbody","row","flexWrap","alignItems","boxSizing","flexGrow","flexShrink","expandingCell","TableStructure","itemKey","Table","TableHead","TableBody","itemCount","length","itemSize","itemData","container","paper","marginBottom","marginLeft","SearchPanel","searchValue","setSearchValue","isError","setIsError","elementsSearch","createSelector","elements","Object","values","v","toString","includes","tableDataElementsSearch","reSearch","re","RegExp","test","tableDataRegSearch","useSearchData","Input","placeholder","type","onChange","e","target","marginTop","initAddValue","surname","dates","time","something","AdditionPanel","addValue","setAddValue","message","setMessage","keys","newValue","TableContainer","useEffect","a","fetch","then","res","json","result","catch","Container","fixed","maxWidth","Paper","mas","sort","b","App","store","configureStore","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.62917e11.chunk.js","sourcesContent":["import makeStyles from \"@material-ui/styles/makeStyles\";\n\nexport const useStyles = makeStyles({\n  app: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  columnLabels: {\n    position: \"absolute !important\",\n    borderLeft: \"1px solid black\",\n  },\n});\n","export const columns = [\n  {\n    label: \"Name\",\n    dataKey: \"name\",\n  },\n  {\n    label: \"Surname\",\n    dataKey: \"surname\",\n  },\n  {\n    label: \"Dates\",\n    dataKey: \"dates\",\n  },\n  {\n    label: \"Time\",\n    dataKey: \"time\",\n  },\n  {\n    label: \"Something\",\n    dataKey: \"something\",\n  },\n];\n\nexport const ROW_SIZE = 48;\n","import { makeStyles } from \"@material-ui/styles\";\nimport { ROW_SIZE } from \"../constants\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    \"&:hover > div\": {\n      color: \"magenta\",\n      cursor: \"pointer\",\n    },\n  },\n  cell: {\n    height: ROW_SIZE,\n    minWidth: 150,\n    wordBreak: \"break-word\",\n  },\n  button: {\n    textTransform: \"lowercase\",\n    background: \"aqua\",\n    height: 20,\n  },\n}));\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { dataFetching: [], loading: false, error: null };\n\nconst tableSlice = createSlice({\n  name: \"table\",\n  initialState,\n  reducers: {\n    changingDataSuccess: (state, action) => {\n      state.dataFetching = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    changingDataFailure: (state, action) => {\n      state.dataFetching = [];\n      state.loading = false;\n      state.error = action.payload;\n    },\n    changingDataFetch: (state) => {\n      state.dataFetching = [];\n      state.loading = true;\n      state.error = null;\n    },\n    addData: (state, action) => {\n      state.dataFetching = [...state.dataFetching, action.payload];\n      state.loading = false;\n      state.error = null;\n    },\n    deleteData: (state, action) => {\n      state.dataFetching = state.dataFetching.filter(\n        (el) => el.id !== action.payload\n      );\n      state.loading = false;\n      state.error = null;\n    },\n  },\n});\n\nconst { actions, reducer } = tableSlice;\nexport const {\n  changingDataSuccess,\n  addData,\n  deleteData,\n  changingDataFailure,\n  changingDataFetch,\n} = actions;\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst sortSlice = createSlice({\n  name: \"sort\",\n  initialState,\n  reducers: {\n    sortData: (state, action) => action.payload,\n  },\n});\n\nconst { actions, reducer } = sortSlice;\nexport const { sortData } = actions;\nexport default reducer;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport {\n  addData,\n  deleteData,\n  changingDataSuccess,\n  changingDataFailure,\n  changingDataFetch,\n} from \"../TableContainer/tableSlice\";\nimport { sortData } from \"../TableContainer/sortSlice\";\n\nexport const useData = () => {\n  const dispatch = useDispatch();\n  const tableData = useSelector((state) => state).regularData.dataFetching;\n  const loadingData = useSelector((state) => state).regularData.loading;\n  const errorData = useSelector((state) => state).regularData.error;\n  const sortedData = useSelector((state) => state).sortedData;\n  const addNewElement = useCallback((value) => dispatch(addData(value)), [dispatch]);\n  const deleteElement = useCallback((value) => dispatch(deleteData(value)), [\n    dispatch,\n  ]);\n  const changingElementsSuccess = useCallback(\n    (value) => dispatch(changingDataSuccess(value)),\n    [dispatch]\n  );\n  const changingElementsFailure = useCallback(\n    (value) => dispatch(changingDataFailure(value)),\n    [dispatch]\n  );\n  const changingElementsFetch = useCallback(() => dispatch(changingDataFetch()), [\n    dispatch,\n  ]);\n  const sortingElements = useCallback((value) => dispatch(sortData(value)), [\n    dispatch,\n  ]);\n\n  return {\n    addNewElement,\n    tableData,\n    loadingData,\n    errorData,\n    deleteElement,\n    changingElementsSuccess,\n    sortedData,\n    sortingElements,\n    changingElementsFailure,\n    changingElementsFetch,\n  };\n};\n","import TableRow from \"@material-ui/core/TableRow\";\nimport { columns } from \"../constants\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport React, { memo } from \"react\";\nimport { areEqual } from \"react-window\";\nimport { useStyles } from \"./styled\";\nimport Button from \"@material-ui/core/Button\";\nimport { useData } from \"../../features/useData\";\n\nexport const Row = memo(({ index, style, data: { data } }) => {\n  const classes = useStyles();\n  const { deleteElement } = useData();\n  return (\n    <TableRow component=\"div\" style={style} className={classes.root}>\n      {columns.map((el, ind) => (\n        <TableCell\n          key={el.label + ind}\n          component=\"div\"\n          variant=\"body\"\n          className={classes.cell}\n        >\n          {data[index][el.dataKey]}\n        </TableCell>\n      ))}\n      <TableCell component=\"div\" variant=\"body\" className={classes.cell}>\n        <Button\n          className={classes.button}\n          onClick={() => deleteElement(data[index].id)}\n        >\n          Удалить\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n}, areEqual);\n","import { makeStyles } from \"@material-ui/styles\";\nimport { ROW_SIZE } from \"../constants\";\n\nexport const useStyles = makeStyles(() => ({\n  cell: {\n    height: ROW_SIZE,\n    width: 150,\n    fontWeight: \"bold\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { useStyles } from \"./styled\";\n\nexport const TableColumns = ({ columns, onSortClick }) => {\n  const [isSorted, setIsSorted] = useState(false);\n  const classes = useStyles();\n  const handleClick = (dataKey) => {\n    onSortClick(dataKey, isSorted);\n    setIsSorted(!isSorted);\n  };\n  return (\n    <TableRow component=\"div\">\n      {columns.map((column, colIndex) => {\n        return (\n          <TableCell\n            key={colIndex}\n            component=\"div\"\n            variant=\"head\"\n            className={classes.cell}\n            scope=\"col\"\n            onClick={() => handleClick(column.dataKey)}\n          >\n            {column.label}\n          </TableCell>\n        );\n      })}\n      <TableCell component=\"div\" variant=\"head\" className={classes.cell} scope=\"col\">\n        Удалить\n      </TableCell>\n    </TableRow>\n  );\n};\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport const useTableStyles = makeStyles(() => ({\n  root: {\n    display: \"block\",\n    flex: 1,\n  },\n  table: {\n    height: \"100%\",\n    minWidth: 900,\n  },\n  tbody: {\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\",\n    minWidth: \"100%\",\n    width: \"100%\",\n  },\n  cell: {\n    display: \"block\",\n    flexGrow: 0,\n    flexShrink: 0,\n  },\n  expandingCell: {\n    flex: 1,\n  },\n}));\n","import Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { FixedSizeList as List } from \"react-window\";\nimport React from \"react\";\nimport { ROW_SIZE } from \"../constants\";\nimport { Row } from \"../Row/Row\";\nimport { TableColumns } from \"../TableColumns/TableColumns\";\nimport { useTableStyles } from \"./styled\";\n\nexport const TableStructure = ({ data, columns, onSortClick }) => {\n  const classes = useTableStyles();\n  const itemKey = (index, { data }) => data[index].name;\n  return (\n    <div className={classes.root}>\n      <Table className={classes.table} component=\"div\">\n        <TableHead component=\"div\">\n          <TableColumns\n            classes={classes}\n            columns={columns}\n            onSortClick={onSortClick}\n          />\n        </TableHead>\n\n        <TableBody component=\"div\" className={classes.tbody}>\n          <AutoSizer>\n            {({ height }) => (\n              <List\n                height={height}\n                width={900}\n                itemCount={data.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{ data }}\n              >\n                {Row}\n              </List>\n            )}\n          </AutoSizer>\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n  },\n  container: {\n    height: 500,\n    minWidth: 950,\n  },\n  paper: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: \"20px\",\n  },\n  error: {\n    color: \"red\",\n  },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  button: {\n    background: \"aqua\",\n    marginLeft: \"10px\",\n  },\n}));\n","import React, { useState } from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport { useStyles } from \"./styled\";\nimport { useSearchData } from \"../../features/useSearchData\";\nimport { useData } from \"../../features/useData\";\n\nexport const SearchPanel = () => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const { sortingElements } = useData();\n  const classes = useStyles();\n  const { tableData, tableDataRegSearch, tableDataElementsSearch } = useSearchData(\n    searchValue\n  );\n\n  const onSearchClick = () => {\n    setSearchValue(\"\");\n    if (tableDataElementsSearch.length) {\n      setIsError(false);\n      sortingElements(tableDataElementsSearch);\n    } else {\n      setIsError(true);\n    }\n  };\n\n  const onSearchRegClick = () => {\n    setSearchValue(\"\");\n    if (tableDataRegSearch.length) {\n      setIsError(false);\n      sortingElements(tableDataRegSearch);\n    } else {\n      setIsError(true);\n    }\n  };\n\n  return (\n    <>\n      <h4>Поиск строк по вхождению подстроки</h4>\n      <Input\n        placeholder=\"Поиск\"\n        type=\"text\"\n        onChange={(e) => setSearchValue(e.target.value)}\n        value={searchValue}\n      />\n      <Button onClick={onSearchClick} className={classes.button}>\n        Поиск\n      </Button>\n      <Button onClick={onSearchRegClick} className={classes.button}>\n        Поиск по регулярному\n      </Button>\n      <Button onClick={() => sortingElements(tableData)} className={classes.button}>\n        Показать все\n      </Button>\n      <p>{isError ? \"Ничего не найдено\" : \"\"}</p>\n    </>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nexport const useSearchData = (searchValue) => {\n  const tableData = useSelector((state) => state).regularData.dataFetching;\n  const elementsSearch = createSelector(\n    (state) => state.regularData.dataFetching,\n    (elements) =>\n      elements.filter(\n        (el) =>\n          Object.values(el).filter((v) => v.toString().includes(searchValue)).length\n      )\n  );\n\n  const tableDataElementsSearch = useSelector(elementsSearch);\n\n  const reSearch = createSelector(\n    (state) => state.regularData.dataFetching,\n    (elements) => {\n      const re = new RegExp(searchValue);\n      return elements.filter(\n        (el) => Object.values(el).filter((v) => re.test(v.toString())).length\n      );\n    }\n  );\n\n  const tableDataRegSearch = useSelector(reSearch);\n\n  return { tableDataElementsSearch, tableDataRegSearch, tableData };\n};\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: \"30px\",\n  },\n  elements: {\n    width: \"20%\",\n  },\n  button: {\n    background: \"aqua\",\n    width: \"100px\",\n    color: \"black\",\n    marginTop: \"10px\",\n  },\n}));\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\nimport { useStyles } from \"./styled\";\nimport { useData } from \"../../features/useData\";\n\nconst initAddValue = {\n  name: \"\",\n  surname: \"\",\n  dates: \"\",\n  time: \"\",\n  something: \"\",\n};\n\nexport const AdditionPanel = () => {\n  const [addValue, setAddValue] = useState(initAddValue);\n  const [message, setMessage] = useState(\"\");\n  const classes = useStyles();\n  const { addNewElement, tableData } = useData(addValue);\n\n  const onAddClick = () => {\n    const newId = tableData[tableData.length - 1].id + 1;\n    const newValue = {\n      id: newId,\n      name: addValue.name,\n      surname: addValue.surname,\n      dates: addValue.dates,\n      time: addValue.time,\n      something: addValue.something,\n    };\n    const values = Object.values(newValue);\n    const isValuesEqual = values.filter((el) => el).length === values.length;\n    if (isValuesEqual) {\n      setAddValue(initAddValue);\n      setMessage(\"Добавлено\");\n      addNewElement(newValue);\n    }\n    setMessage(\"Заполните все поля\");\n  };\n\n  return (\n    <div className={classes.root}>\n      {Object.keys(initAddValue).map((el, index) => (\n        <Input\n          type=\"text\"\n          key={el + index}\n          placeholder={el}\n          className={classes.elements}\n          onChange={(e) =>\n            setAddValue((state) => ({ ...state, [el]: e.target.value }))\n          }\n          value={addValue[el]}\n        />\n      ))}\n      <Button color=\"primary\" onClick={onAddClick} className={classes.button}>\n        Добавить\n      </Button>\n      <p>{message}</p>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { columns } from \"./constants\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { TableStructure } from \"./TableStructure/TableStructure\";\nimport { useStyles } from \"./styled\";\nimport { SearchPanel } from \"./SearchPanel/SearchPanel\";\nimport { AdditionPanel } from \"./AdditionPanel/AdditionPanel\";\nimport { useData } from \"../features/useData\";\n\nconst TableContainer = () => {\n  const {\n    tableData,\n    changingElementsSuccess,\n    loadingData,\n    errorData,\n    sortedData,\n    sortingElements,\n    changingElementsFetch,\n    changingElementsFailure,\n  } = useData();\n  const classes = useStyles();\n\n  useEffect(async () => {\n    await fetch(\"bigdata.json\")\n      .then((res) => {\n        changingElementsFetch();\n        return res.json();\n      })\n      .then((result) => {\n        changingElementsSuccess(result);\n      })\n      .catch((e) => changingElementsFailure(\"Ошибка, попробуйте позже\"));\n  }, []);\n\n  const onSortClick = (index, isSorted) => {\n    const mas = sortedData.length ? [...sortedData] : [...tableData];\n    !isSorted\n      ? sortingElements(mas.sort((a, b) => a[index] > b[index]))\n      : sortingElements([]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Container fixed maxWidth={\"sm\"} className={classes.container}>\n        {errorData ? (\n          <div className={classes.error}>{errorData}</div>\n        ) : (\n          <>\n            <Paper className={classes.paper}>\n              {loadingData ? (\n                <div>Loading</div>\n              ) : (\n                <TableStructure\n                  data={sortedData.length ? sortedData : tableData}\n                  onSortClick={onSortClick}\n                  columns={columns}\n                />\n              )}\n            </Paper>\n            <AdditionPanel />\n            <SearchPanel />\n          </>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default TableContainer;\n","import React from \"react\";\nimport { useStyles } from \"./styled\";\nimport TableContainer from \"../TableContainer/TableContainer\";\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.app}>\n      <TableContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import tableSlice from \"../components/TableContainer/tableSlice\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport sortSlice from \"../components/TableContainer/sortSlice\";\n\nconst store = configureStore({\n  reducer: {\n    regularData: tableSlice,\n    sortedData: sortSlice,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}