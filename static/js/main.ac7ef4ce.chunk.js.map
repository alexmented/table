{"version":3,"sources":["components/App/styled.js","components/TableContainer/constants.js","components/TableContainer/Row/styled.js","components/TableContainer/tableSlice.js","components/TableContainer/Row/Row.js","components/TableContainer/TableColumns/styled.js","components/TableContainer/TableColumns/TableColumns.js","components/TableContainer/TableStructure/styled.js","components/TableContainer/TableStructure/TableStructure.js","components/TableContainer/styled.js","components/TableContainer/SearchPanel/styled.js","components/TableContainer/SearchPanel/SearchPanel.js","components/TableContainer/AdditionPanel/styled.js","components/TableContainer/AdditionPanel/AdditionPanel.js","components/TableContainer/TableContainer.js","components/App/App.js","store/store.js","index.js"],"names":["useStyles","makeStyles","app","display","flexDirection","columnLabels","position","borderLeft","columns","label","dataKey","root","color","cursor","cell","height","tableSlice","createSlice","name","initialState","reducers","changingData","state","action","payload","addData","deleteData","filter","el","id","Row","memo","index","style","data","dispatch","useDispatch","classes","actions","bindActionCreators","TableRow","component","className","map","ind","TableCell","variant","onClick","areEqual","TableColumns","onSortClick","useState","isSorted","setIsSorted","column","colIndex","scope","useTableStyles","flex","table","width","tbody","row","flexWrap","alignItems","boxSizing","minWidth","flexGrow","flexShrink","expandingCell","TableStructure","itemKey","Table","TableHead","TableBody","itemCount","length","itemSize","itemData","container","paper","marginBottom","button","background","marginLeft","SearchPanel","setIsFiltered","searchValue","setSearchValue","tableData","useSelector","elementsSearch","createSelector","elements","Object","values","v","toString","includes","tableDataElementsSearch","reSearch","re","RegExp","test","tableDataRegSearch","Input","placeholder","type","onChange","e","target","value","Button","marginTop","initAddValue","surname","dates","time","something","AdditionPanel","addValue","setAddValue","keys","newVal","TableContainer","isFiltered","useEffect","a","fetch","then","res","json","result","Container","maxWidth","Paper","mas","sort","b","App","store","createStore","reducer","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.ac7ef4ce.chunk.js","sourcesContent":["import makeStyles from \"@material-ui/styles/makeStyles\"\n\nexport const useStyles = makeStyles({\n  app: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  columnLabels: {\n    position: \"absolute !important\",\n    borderLeft: \"1px solid black\",\n  },\n})\n","export const columns = [\n  {\n    label: \"Name\",\n    dataKey: \"name\",\n  },\n  {\n    label: \"Surname\",\n    dataKey: \"surname\",\n  },\n  {\n    label: \"Dates\",\n    dataKey: \"dates\",\n  },\n  {\n    label: \"Time\",\n    dataKey: \"time\",\n  },\n  {\n    label: \"Something\",\n    dataKey: \"something\",\n  },\n]\n\nexport const ROW_SIZE = 48\n","import { makeStyles } from \"@material-ui/styles\"\nimport { ROW_SIZE } from \"../constants\"\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    \"&:hover > div\": {\n      color: \"magenta\",\n      cursor: \"pointer\",\n    },\n  },\n  cell: {\n    height: ROW_SIZE,\n  },\n}))\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = []\n\nexport const tableSlice = createSlice({\n  name: \"table\",\n  initialState,\n  reducers: {\n    changingData: (state, action) => action.payload,\n    addData: (state, action) => [...state, action.payload],\n    deleteData: (state, action) => state.filter((el) => el.id !== action.payload),\n  },\n})\n","import TableRow from \"@material-ui/core/TableRow\"\nimport { columns } from \"../constants\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport React, { memo } from \"react\"\nimport { areEqual } from \"react-window\"\nimport { useStyles } from \"./styled\"\nimport { tableSlice } from \"../tableSlice\"\nimport { bindActionCreators } from \"redux\"\nimport { useDispatch } from \"react-redux\"\n\nexport const Row = memo(({ index, style, data: { data } }) => {\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const actions = bindActionCreators(tableSlice.actions, dispatch)\n  return (\n    <TableRow component=\"div\" style={style} className={classes.root}>\n      {columns.map((el, ind) => (\n        <TableCell\n          key={el.label + ind}\n          component=\"div\"\n          variant=\"body\"\n          className={classes.cell}\n        >\n          {data[index][el.dataKey]}\n        </TableCell>\n      ))}\n      <TableCell component=\"div\" variant=\"body\" className={classes.cell}>\n        <button onClick={() => actions.deleteData(data[index].id)}>Удалить</button>\n      </TableCell>\n    </TableRow>\n  )\n}, areEqual)\n","import { makeStyles } from \"@material-ui/styles\"\nimport { ROW_SIZE } from \"../constants\"\n\nexport const useStyles = makeStyles(() => ({\n  cell: {\n    height: ROW_SIZE,\n  },\n}))\n","import React, { useState } from \"react\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport { useStyles } from \"./styled\"\n\nexport const TableColumns = ({ columns, onSortClick }) => {\n  const [isSorted, setIsSorted] = useState(false)\n  const classes = useStyles()\n  const handleClick = (dataKey) => {\n    onSortClick(dataKey, isSorted)\n    setIsSorted(!isSorted)\n  }\n  return (\n    <TableRow component=\"div\">\n      {columns.map((column, colIndex) => {\n        return (\n          <TableCell\n            key={colIndex}\n            component=\"div\"\n            variant=\"head\"\n            className={classes.cell}\n            scope=\"col\"\n            onClick={() => handleClick(column.dataKey)}\n          >\n            {column.label}\n          </TableCell>\n        )\n      })}\n      <TableCell component=\"div\" variant=\"head\" className={classes.cell} scope=\"col\">\n        Удалить\n      </TableCell>\n    </TableRow>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\"\n\nexport const useTableStyles = makeStyles(() => ({\n  root: {\n    display: \"block\",\n    flex: 1,\n  },\n  table: {\n    height: \"100%\",\n    width: \"100%\",\n  },\n  tbody: {\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\",\n    minWidth: \"100%\",\n    width: \"100%\",\n  },\n  cell: {\n    display: \"block\",\n    flexGrow: 0,\n    flexShrink: 0,\n  },\n  expandingCell: {\n    flex: 1,\n  },\n}))\n","import Table from \"@material-ui/core/Table\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport AutoSizer from \"react-virtualized-auto-sizer\"\nimport { FixedSizeList as List } from \"react-window\"\nimport React from \"react\"\nimport { ROW_SIZE } from \"../constants\"\nimport { Row } from \"../Row/Row\"\nimport { TableColumns } from \"../TableColumns/TableColumns\"\nimport { useTableStyles } from \"./styled\"\n\nexport const TableStructure = ({ data, columns, onSortClick }) => {\n  const classes = useTableStyles()\n  const itemKey = (index, data) => data.data[index].name\n  return (\n    <div className={classes.root}>\n      <Table className={classes.table} component=\"div\">\n        <TableHead component=\"div\">\n          <TableColumns\n            classes={classes}\n            columns={columns}\n            onSortClick={onSortClick}\n          />\n        </TableHead>\n\n        <TableBody component=\"div\" className={classes.tbody}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <List\n                height={height}\n                width={width}\n                itemCount={data.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{ data }}\n              >\n                {Row}\n              </List>\n            )}\n          </AutoSizer>\n        </TableBody>\n      </Table>\n    </div>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\"\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n  },\n  container: {\n    flexGrow: 1,\n    height: 500,\n  },\n  paper: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: \"20px\",\n  },\n}))\n","import { makeStyles } from \"@material-ui/styles\"\n\nexport const useStyles = makeStyles(() => ({\n  button: {\n    background: \"aqua\",\n    marginLeft: \"10px\",\n  },\n}))\n","import React, { useState } from \"react\"\nimport Input from \"@material-ui/core/Input\"\nimport Button from \"@material-ui/core/Button\"\nimport { useStyles } from \"./styled\"\nimport { createSelector } from \"reselect\"\nimport { useSelector } from \"react-redux\"\n\nexport const SearchPanel = ({ setIsFiltered }) => {\n  const [searchValue, setSearchValue] = useState(\"\")\n  const classes = useStyles()\n  const tableData = useSelector((state) => state)\n  const elementsSearch = createSelector(\n    (state) => state,\n    (elements) =>\n      elements.filter(\n        (el) =>\n          Object.values(el).filter((v) => v.toString().includes(searchValue)).length\n      )\n  )\n\n  const tableDataElementsSearch = useSelector(elementsSearch)\n\n  const reSearch = createSelector(\n    (state) => state,\n    (elements) => {\n      const re = new RegExp(searchValue)\n      return elements.filter(\n        (el) => Object.values(el).filter((v) => re.test(v.toString())).length\n      )\n    }\n  )\n\n  const tableDataRegSearch = useSelector(reSearch)\n\n  const onSearchClick = () => {\n    setSearchValue(\"\")\n    setIsFiltered(tableDataElementsSearch)\n  }\n\n  const onSearchRegClick = () => {\n    setSearchValue(\"\")\n    setIsFiltered(tableDataRegSearch)\n  }\n\n  return (\n    <>\n      <Input\n        placeholder=\"Поиск\"\n        type=\"text\"\n        onChange={(e) => setSearchValue(e.target.value)}\n        value={searchValue}\n      />\n      <Button onClick={onSearchClick} className={classes.button}>\n        Поиск\n      </Button>\n      <Button onClick={onSearchRegClick} className={classes.button}>\n        Поиск по регулярному\n      </Button>\n      <Button onClick={() => setIsFiltered(tableData)} className={classes.button}>\n        Показать все\n      </Button>\n    </>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\"\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: \"30px\",\n  },\n  elements: {\n    width: \"20%\",\n  },\n  button: {\n    background: \"aqua\",\n    width: \"100px\",\n    color: \"black\",\n    marginTop: \"10px\",\n  },\n}))\n","import React, { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Button from \"@material-ui/core/Button\"\nimport Input from \"@material-ui/core/Input\"\nimport { bindActionCreators } from \"redux\"\nimport { tableSlice } from \"../tableSlice\"\nimport { useStyles } from \"./styled\"\n\nconst initAddValue = {\n  name: \"\",\n  surname: \"\",\n  dates: \"\",\n  time: \"\",\n  something: \"\",\n}\n\nexport const AdditionPanel = () => {\n  const [addValue, setAddValue] = useState(initAddValue)\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const actions = bindActionCreators(tableSlice.actions, dispatch)\n  const tableData = useSelector((state) => state)\n\n  const onAddClick = () => {\n    const newId = tableData[tableData.length - 1].id + 1\n    const newVal = {\n      id: newId,\n      name: addValue.name,\n      surname: addValue.surname,\n      dates: addValue.dates,\n      time: addValue.time,\n      something: addValue.something,\n    }\n    setAddValue(initAddValue)\n    actions.addData(newVal)\n  }\n\n  return (\n    <div className={classes.root}>\n      {Object.keys(initAddValue).map((el, index) => (\n        <Input\n          type=\"text\"\n          key={el + index}\n          placeholder={el}\n          className={classes.elements}\n          onChange={(e) =>\n            setAddValue((state) => ({ ...state, [el]: e.target.value }))\n          }\n          value={addValue[el]}\n        />\n      ))}\n      <Button color=\"primary\" onClick={onAddClick} className={classes.button}>\n        Добавить\n      </Button>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { columns } from \"./constants\"\nimport Container from \"@material-ui/core/Container\"\nimport Paper from \"@material-ui/core/Paper\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { TableStructure } from \"./TableStructure/TableStructure\"\nimport { tableSlice } from \"./tableSlice\"\nimport { useStyles } from \"./styled\"\nimport { bindActionCreators } from \"redux\"\nimport { SearchPanel } from \"./SearchPanel/SearchPanel\"\nimport { AdditionPanel } from \"./AdditionPanel/AdditionPanel\"\n\nconst TableContainer = () => {\n  const tableData = useSelector((state) => state)\n  const classes = useStyles()\n  const [isFiltered, setIsFiltered] = useState([])\n  const dispatch = useDispatch()\n  const actions = bindActionCreators(tableSlice.actions, dispatch)\n\n  useEffect(async () => {\n    await fetch(\"jj.json\")\n      .then((res) => res.json())\n      .then((result) => actions.changingData(result))\n  }, [])\n\n  const onSortClick = (index, isSorted) => {\n    const mas = isFiltered.length ? isFiltered : [...tableData]\n    !isSorted\n      ? setIsFiltered(mas.sort((a, b) => a[index] > b[index]))\n      : setIsFiltered([])\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Paper className={classes.paper}>\n          <TableStructure\n            data={isFiltered.length ? isFiltered : tableData}\n            onSortClick={onSortClick}\n            columns={columns}\n          />\n        </Paper>\n        <AdditionPanel />\n        <SearchPanel setIsFiltered={setIsFiltered} />\n      </Container>\n    </div>\n  )\n}\n\nexport default TableContainer\n","import React from \"react\"\nimport { useStyles } from \"./styled\"\nimport TableContainer from \"../TableContainer/TableContainer\"\n\nfunction App() {\n  const classes = useStyles()\n  return (\n    <div className={classes.app}>\n      <TableContainer />\n    </div>\n  )\n}\n\nexport default App\n","import { createStore } from \"redux\"\nimport { tableSlice } from \"../components/TableContainer/tableSlice\"\n\nconst store = createStore(tableSlice.reducer)\n\nexport default store\n","import React from \"react\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App/App\"\nimport store from \"./store/store\"\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}